" Vim with all enhancements
" source $VIMRUNTIME/vimrc_example.vim

" Mouse behavior (the Windows way)
" behave mswin

" Use the internal diff if available.
" Otherwise use the special 'diffexpr' for Windows.
" if &diffopt !~# 'internal'
"   set diffexpr=MyDiff()
" endif
" function MyDiff()
"   let opt = '-a --binary '
"   if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
"   if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
"   let arg1 = v:fname_in
"   if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
"   let arg1 = substitute(arg1, '!', '\!', 'g')
"   let arg2 = v:fname_new
"   if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
"   let arg2 = substitute(arg2, '!', '\!', 'g')
"   let arg3 = v:fname_out
"   if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
"   let arg3 = substitute(arg3, '!', '\!', 'g')
"   if $VIMRUNTIME =~ ' '
"     if &sh =~ '\<cmd'
"       if empty(&shellxquote)
"         let l:shxq_sav = ''
"         set shellxquote&
"       endif
"       let cmd = '"' . $VIMRUNTIME . '\diff"'
"     else
"       let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
"     endif
"   else
"     let cmd = $VIMRUNTIME . '\diff'
"   endif
"   let cmd = substitute(cmd, '!', '\!', 'g')
"   silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
"   if exists('l:shxq_sav')
"     let &shellxquote=l:shxq_sav
"   endif
" endfunction

set nu
set ai!
set ruler
set cindent
set hlsearch
set nobackup
set t_Co=256
set tabstop=4
set showmatch
set autoindent
set cursorline
set smartindent
set history=1000
setlocal et sta sw=4 sts=4

set encoding=utf-8
set fileencodings=utf-8,ucs-bom,gb

syntax on
" colorscheme evening

" for gVim.
if has("gui_running")
    colorscheme mycolors
    set guifont=Source\ Code\ Pro:h13    
    " hide menu bar.
    set guioptions=m
    " remove right-hand scroll bar
    set guioptions-=r
    set nocompatible
    set backspace=indent,eol,start
else
    colorscheme mycolors
endif
